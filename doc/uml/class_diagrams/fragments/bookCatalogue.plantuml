@startuml

title __BOOKCATALOGUE FRAGMENT's Class Diagram__\n

package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.controller {
    class BookController {
      - firebase : FirebaseDatabase
      - userController : UserController
      - notificationController : NotificationController
      - observableUserCache : ObservableUserCache
      {static} - instance : BookController
      - BookController()
      {static} + getInstance()
      + addBook()
      + getBook()
      + updateBook()
      + requestBook()
      + cancelRequest()
      + acceptRequest()
      + declineRequest()
      + scanMyBorrowedBook()
      + scanMyOwnedBook()
      + exchangeBook()
      + returnBook()
      + getMyBorrowedBook()
      + getMyBorrowedBooks()
      + addMyOwnedBook()
      + getMyOwnedBook()
      + getMyOwnedBooks()
      + updateMyOwnedBook()
      + deleteMyOwnedBook()
      + getUserOwnedBook()
      + getUserOwnedBooks()
      + getBookPath()
      + getBorrowedBooksPath()
      + getBorrowedBookPath()
      + getOwnedBooksPath()
      + getOwnedBookPath()
    }
  }
}


package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.controller {
    class ImageController {
      - IMAGE_FORMAT : String
      - storage : StorageReference
      - cache : ImageCache
      {static} - instance : ImageController
      - ImageController()
      {static} + getInstance()
      + addImage()
      + getImage()
      + updateImage()
      + deleteImage()
      - getImageReference()
    }
  }
}


package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.controller {
    class UserController {
      - auth : FirebaseAuth
      - database : FirebaseDatabase
      {static} - instance : UserController
      - UserController()
      {static} + getInstance()
      + isAuthenticated()
      + authenticate()
      + deauthenticate()
      + createUser()
      + getMyId()
      - getUserEmail()
      + getUserProfile()
      + getMyProfile()
      + updateMyProfile()
    }
  }
}


package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.adapter {
    class OwnerRecyclerViewAdapter {
      - mContext : Context
      - mOwnerListItem : List<OwnerListItem>
      + OwnerRecyclerViewAdapter()
      + onCreateViewHolder()
      + onBindViewHolder()
      + getItemCount()
      - dataBundler()
    }
  }
}


package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.fragment {
    package ca.ualberta.CMPUT3012019T02.alexandria.fragment.bookCatalogue {
      class BookCatalogueFragment {
        - title : String
        - author : String
        - isbn : String
        - coverBitmap : Bitmap
        - valueEventListener : ValueEventListener
        - databaseReference : DatabaseReference
        + onCreateView()
        + onDestroyView()
        - setUI()
        - loadFragment()
      }
    }
  }
}


package ca.ualberta.CMPUT3012019T02.alexandria {
  package ca.ualberta.CMPUT3012019T02.alexandria.fragment {
    package ca.ualberta.CMPUT3012019T02.alexandria.fragment.bookCatalogue {
      class OwnerListFragment {
        - owners : List<OwnerListItem>
        - isbn : String
        - activity : Activity
        - childEventListener : ChildEventListener
        - databaseReference : DatabaseReference
        - userAdapter : OwnerRecyclerViewAdapter
        - bookController : BookController
        - userController : UserController
        - imageController : ImageController
        + onAttach()
        + onCreateView()
        + onDestroyView()
      }
    }
  }
}


BookCatalogueFragment -up-|> Fragment
BookCatalogueFragment "1" -- "1" OwnerListFragment : creates >
OwnerListFragment -up-|> Fragment
OwnerListFragment o-- "1" OwnerRecyclerViewAdapter
OwnerListFragment o-- "1" BookController
OwnerListFragment o-- "1" UserController
OwnerListFragment o-- "1" ImageController


right footer


  PlantUML diagram partly generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
  For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
